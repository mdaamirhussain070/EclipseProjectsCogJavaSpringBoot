package com.userservice.exception;

import lombok.extern.java.Log;
import com.userservice.utility.ApiResponse;
import lombok.extern.java.Log;
import lombok.extern.slf4j.Slf4j;

import java.time.LocalDate;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.RestControllerAdvice;

@Slf4j
@RestControllerAdvice
public class GlobalException extends RuntimeException {
   
	private static final Logger log=LoggerFactory.getLogger(GlobalException.class);
	@ExceptionHandler(RuntimeException.class)
    public ResponseEntity<ApiResponse> globalExceptionHandler(RuntimeException ex){
		LocalDate localDate=LocalDate.now();
		log.info("Server Error Happend "+localDate);
		log.info(ex.getMessage());
        String message="Inter Server Error";
      
        ApiResponse apiResponse=new ApiResponse(message);
        return new ResponseEntity<>(apiResponse, HttpStatus.INTERNAL_SERVER_ERROR);
    }
    @ExceptionHandler(UserNotFoundException.class)
    public ResponseEntity<ApiResponse> userNotFoundException(UserNotFoundException ex){
    	LocalDate localDate=LocalDate.now();
    	log.info("User Not Found Exception Happen "+localDate);
		log.info(ex.getMessage());

        ApiResponse apiResponse=new ApiResponse(ex.getMessage(),ex.getId());
        return new ResponseEntity<>(apiResponse, HttpStatus.NOT_FOUND);
    }

}
